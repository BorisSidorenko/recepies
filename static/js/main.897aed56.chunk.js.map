{"version":3,"sources":["context/ThemeContext.js","hooks/useTheme.js","hooks/useFetch.js","pages/create/Create.js","components/RecipeList.js","pages/home/Home.js","pages/recipe/Recipe.js","pages/search/Search.js","components/Searchbar.js","components/Navbar.js","assets/mode-icon.svg","components/ThemeSelector.js","App.js","index.js"],"names":["ThemeContext","createContext","themeReducer","state","action","type","color","payload","mode","ThemeProvider","children","useReducer","dispatch","Provider","value","changeColor","changeMode","useTheme","context","useContext","undefined","Error","useFetch","url","method","useState","data","setData","isPending","setIsPending","error","setError","options","setOptions","postData","headers","body","JSON","stringify","useEffect","controller","AbortController","fetchData","fetchOptions","a","fetch","signal","res","ok","statusText","json","name","console","log","abort","Create","title","setTitle","setMethod","cookingTime","setCookingTime","newIngredient","setNewIngredient","ingredients","setIngredients","ingredientInput","useRef","history","useHistory","push","className","onSubmit","e","preventDefault","onChange","target","required","ref","onClick","ing","trim","includes","prevIngredients","current","focus","map","i","RecipeList","recipes","length","recipe","substring","to","id","Home","Recipe","useParams","Search","queryString","useLocation","search","query","URLSearchParams","get","Searchbar","term","setTerm","htmlFor","Navbar","style","background","themeColors","ThemeSelector","src","modeIcon","alt","filter","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.897aed56.chunk.js","sourcesContent":["import { createContext, useReducer } from \"react\";\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nconst themeReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'CHANGE_COLOR':\r\n            return { ...state, color: action.payload }\r\n        case 'CHANGE_MODE':\r\n            return { ...state, mode: action.payload }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport function ThemeProvider({ children }) {\r\n    const [state, dispatch] = useReducer(themeReducer, {\r\n        color: '#58249c',\r\n        mode: 'light'   \r\n    });\r\n\r\n    const changeColor = (color) => {\r\n        dispatch({ type: 'CHANGE_COLOR', payload: color });\r\n    }\r\n\r\n    const changeMode = (mode) => {\r\n        dispatch({ type: 'CHANGE_MODE', payload: mode });\r\n    }\r\n\r\n    return (\r\n        <ThemeContext.Provider value={{...state, changeColor, changeMode}}>\r\n            {children}\r\n        </ThemeContext.Provider>\r\n    )\r\n}","import { useContext } from 'react';\r\nimport { ThemeContext } from '../context/ThemeContext';\r\n\r\nexport const useTheme = () => {\r\n    const context = useContext(ThemeContext);\r\n\r\n    if (context === undefined) {\r\n        throw new Error('useTheme() must be used inside a ThemeProvider');\r\n    }\r\n\r\n    return context;\r\n}","import { useState, useEffect } from \"react\"\n\nexport const useFetch = (url, method = \"GET\") => {\n  const [data, setData] = useState(null)\n  const [isPending, setIsPending] = useState(false)\n  const [error, setError] = useState(null)\n  const [options, setOptions] = useState(null)\n\n  const postData = (postData) => {\n    setOptions({\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(postData)\n    });\n  }\n\n  useEffect(() => {\n    const controller = new AbortController()\n\n    const fetchData = async (fetchOptions) => {\n      setIsPending(true)\n      \n      try {\n        const res = await fetch(url, { ...fetchOptions, signal: controller.signal })\n        if(!res.ok) {\n          throw new Error(res.statusText)\n        }\n        const data = await res.json()\n\n        setIsPending(false)\n        setData(data)\n        setError(null)\n      } catch (err) {\n        if (err.name === \"AbortError\") {\n          console.log(\"the fetch was aborted\")\n        } else {\n          setIsPending(false)\n          setError('Could not fetch the data')\n        }\n      }\n    }\n    \n    if (method === \"GET\") {\n      fetchData()\n    }\n\n    if (method === \"POST\" && options) {\n      fetchData(options)\n    }\n\n    return () => {\n      controller.abort()\n    }\n\n  }, [url, options, method])\n\n  return { data, isPending, error, postData }\n}","import { useState, useRef, useEffect } from 'react';\r\nimport { useFetch } from '../../hooks/useFetch';\r\nimport { useHistory } from 'react-router';\r\nimport './Create.css';\r\n\r\nexport default function Create() {\r\n    const [title, setTitle] = useState('');\r\n    const [method, setMethod] = useState('');\r\n    const [cookingTime, setCookingTime] = useState('');\r\n    const [newIngredient, setNewIngredient] = useState('');\r\n    const [ingredients, setIngredients] = useState([]);\r\n    const ingredientInput = useRef(null);\r\n    const { postData, data } = useFetch('http://localhost:3000/recipes', 'POST');\r\n    const history = useHistory();\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();    \r\n        postData({ title, ingredients, method, cookingTime: `${cookingTime} minutes` });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data) {\r\n            history.push('/');\r\n        }\r\n    }, [data, history])\r\n\r\n    const handleAdd = (e) => {\r\n        e.preventDefault();\r\n        const ing = newIngredient.trim();\r\n        \r\n        if (ing && !ingredients.includes(ing)) {\r\n            setIngredients(prevIngredients => [...prevIngredients, ing])\r\n        }\r\n        setNewIngredient('');     \r\n        ingredientInput.current.focus();   \r\n    }\r\n\r\n    return (\r\n        <div className=\"create\">\r\n            <h2 className=\"page-title\">Add a New Recipe</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <label>\r\n                    <span>Recipe title:</span>\r\n                    <input type=\"text\" onChange={(e) => setTitle(e.target.value)} value={title} required/>\r\n                </label>\r\n                <label>\r\n                    <span>Recipe ingredients:</span>\r\n                    <div className=\"ingredients\">\r\n                        <input type=\"text\" onChange={(e) => setNewIngredient(e.target.value)} value={newIngredient} ref={ingredientInput}/>\r\n                        <button className=\"btn\" onClick={handleAdd}>Add</button>\r\n                    </div>\r\n                </label>\r\n                <p>Current ingredients: {ingredients.map(i => <em key={i}>{i}, </em>)}</p>\r\n                <label>\r\n                    <span>Recipe method:</span>\r\n                    <textarea onChange={(e) => setMethod(e.target.value)} value={method} required/>\r\n                </label>\r\n                <label>\r\n                    <span>Cooking time (minutes):</span>\r\n                    <input type=\"number\" onChange={(e) => setCookingTime(e.target.value)} value={cookingTime} required/>\r\n                </label>\r\n                <button className=\"btn\">Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import { Link } from 'react-router-dom';\r\nimport { useTheme } from '../hooks/useTheme';\r\nimport './RecipeList.css';\r\n\r\nexport default function RecipeList({ recipes }) {\r\n    const { mode } = useTheme();\r\n\r\n    if (recipes.length === 0) {\r\n        return <div className=\"error\">No recipes to load...</div>\r\n    }\r\n    \r\n    return (\r\n        <div className=\"recipe-list\">\r\n            {recipes.map((recipe) => (\r\n                <div key={recipe.id} className={`card ${mode}`}>\r\n                    <h3 >{recipe.title}</h3>\r\n                    <p>{recipe.cookingTime} to make.</p>\r\n                    <div>{recipe.method.substring(0, 100)}...</div>\r\n                    <Link to={`/recipes/${recipe.id}`}>Cook This</Link>\r\n                </div>                \r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n","import { useFetch } from '../../hooks/useFetch';\r\nimport RecipeList from '../../components/RecipeList';\r\nimport './Home.css';\r\n\r\nexport default function Home() {\r\n    const {data, isPending, error } = useFetch('http://localhost:3000/recipes');\r\n    return (\r\n        <div className=\"home\">\r\n            {error && <p className=\"error\">{error}</p>}\r\n            {isPending && <p className=\"loading\">Loading...</p>}\r\n            {data && <RecipeList recipes={data}/>}\r\n        </div>\r\n    )\r\n}\r\n","import { useParams } from 'react-router';\r\nimport { useFetch } from '../../hooks/useFetch';\r\nimport { useTheme } from '../../hooks/useTheme';\r\nimport './Recipe.css';\r\n\r\nexport default function Recipe() {\r\n    const { id } = useParams();\r\n    const { data: recipe, isPending, error } = useFetch(`http://localhost:3000/recipes/${id}`);\r\n    const { mode } = useTheme();\r\n    return (\r\n        <div className={`recipe ${mode}`}>\r\n            {error && <p className=\"error\">{error}</p>}\r\n            {isPending && <p className=\"loading\">Loading...</p>}\r\n            {recipe && (\r\n                <>\r\n                    <h2 className=\"page-title\">{recipe.title}</h2>\r\n                    <p>Takes {recipe.cookingTime} to cook.</p>\r\n                    <ul>\r\n                        {recipe.ingredients.map((ing) => <li key={ing}>{ing}</li>)}\r\n                    </ul>\r\n                    <p className=\"method\">{recipe.method}</p>\r\n                </>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n","import { useLocation } from 'react-router';\r\nimport { useFetch } from '../../hooks/useFetch';\r\nimport RecipeList from '../../components/RecipeList';\r\nimport './Search.css';\r\n\r\nexport default function Search() {\r\n    const queryString = useLocation().search;\r\n    const queryParams = new URLSearchParams(queryString);\r\n    const query = queryParams.get('q');\r\n\r\n    const url = `http://localhost:3000/recipes/?q=${query}`;\r\n    const { error, isPending, data } = useFetch(url);\r\n\r\n    return (\r\n        <div>\r\n            <h2 className=\"page-title\">Recipes including \"{query}\"</h2>\r\n            {error && <p className=\"error\">{error}</p>}\r\n            {isPending && <p className=\"loading\">Loading...</p>}\r\n            {data && <RecipeList recipes={data}/>}\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport './Searchbar.css';\r\n\r\nexport default function Searchbar() {\r\n    const [term, setTerm] = useState('');\r\n    const history = useHistory();\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        history.push(`/search/?q=${term}`);\r\n    }\r\n\r\n    return (\r\n        <div className=\"searchbar\">\r\n            <form onSubmit={handleSubmit}>\r\n                <label htmlFor=\"search\">Search</label>\r\n                <input type=\"text\" id=\"search\" onChange={(e) => setTerm(e.target.value)} required/>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import { Link } from 'react-router-dom';\r\nimport Searchbar from './Searchbar';\r\nimport { useTheme } from '../hooks/useTheme';\r\nimport './Navbar.css';\r\n\r\nexport default function Navbar() {    \r\n    const { color } = useTheme();\r\n\r\n    return (\r\n        <div className=\"navbar\" style={{ background: color }}>\r\n            <nav>\r\n                <Link to=\"/\" className=\"brand\">\r\n                    <h1>Cooking Ninja</h1>\r\n                </Link>\r\n                <Searchbar />\r\n                <Link to=\"/create\">\r\n                    Create Recipe\r\n                </Link>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/mode-icon.651cf792.svg\";","import './ThemeSelector.css';\r\nimport { useTheme } from '../hooks/useTheme';\r\nimport modeIcon from '../assets/mode-icon.svg';\r\n\r\nconst themeColors = ['#58249c', '#249c6b', '#b70233'];\r\n\r\nexport default function ThemeSelector() {\r\n    const { changeColor, changeMode, mode } = useTheme();\r\n\r\n    const toggleMode = () => changeMode(mode === 'light' ? 'dark' : 'light');\r\n\r\n    return (\r\n        <div className=\"theme-selector\">\r\n            <div className=\"mode-toggle\">\r\n                <img src={modeIcon} onClick={toggleMode} alt=\"dark/light toggle icon\" style={{ filter: mode === 'dark' ? 'invert(100%)' : 'invert(20%)' }}/>\r\n            </div>\r\n            <div className=\"theme-buttons\">\r\n                    {themeColors.map(color => (\r\n                        <div \r\n                            key={color}\r\n                            onClick={() => changeColor(color)}\r\n                            style={{ background: color }}\r\n                        />\r\n                    ))}\r\n            </div>           \r\n        </div>\r\n    )\r\n}\r\n","import { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { useTheme } from './hooks/useTheme';\n\nimport Create from './pages/create/Create';\nimport Home from './pages/home/Home';\nimport Recipe from './pages/recipe/Recipe';\nimport Search from './pages/search/Search';\nimport Navbar from './components/Navbar';\nimport ThemeSelector from './components/ThemeSelector';\n\nimport './App.css'\n\nfunction App() {\n  const { mode } = useTheme();\n  return (\n    <div className={`App ${mode}`}>\n      <BrowserRouter>\n        <Navbar />\n        <ThemeSelector />\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/create\">\n            <Create />\n          </Route>\n          <Route path=\"/search\">\n            <Search />\n          </Route>\n          <Route path=\"/recipes/:id\">\n            <Recipe />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { ThemeProvider } from './context/ThemeContext';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>  \n    <ThemeProvider>      \n      <App />    \n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}